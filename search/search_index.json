{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Krawler: a kernel releases crawler","text":"<p>A crawler for kernel releases distributed by the major Linux distributions.</p> <p>It supports, Amazon Linux v1, Amazon Linux v2, Amazon Linux 2022, Centos, Debian, Ubuntu, Fedora, Oracle Linux, OpenSUSE Linux, Arch Linux.</p> <p>The crawling data is continuously published and is available at db.krawler.dev.</p>"},{"location":"getting-started/","title":"Getting started","text":"<p>Let's imagine you want to list the available CentOS kernel releases, scraping default mirrors. You do it by running:</p> <pre><code>krawler ls centos -o yaml\n</code></pre>"},{"location":"getting-started/#configuration","title":"Configuration","text":"<p>A configuration lets you configure parameters for the crawling, like the mirrors to scrape.</p> <p>The default configuration file path is <code>$HOME/.krawler.yaml</code>. You can specify a custom path with the <code>--config</code> option.</p> <p>When a configuration is not present, the default configurations for repositories are used.</p> <p>For a detailed overview see the reference.</p> <p>Moreover, sample configurations are available here.</p>"},{"location":"roadmap/","title":"Roadmap","text":"<ul> <li>Provide GCC versions</li> <li>Support new distributions</li> </ul>"},{"location":"reference/","title":"Index","text":"<ul> <li>CLI reference</li> <li>Configuration reference</li> </ul>"},{"location":"reference/cli/","title":"CLI reference","text":"<pre><code>krawler [options] &lt;command&gt;\n</code></pre>"},{"location":"reference/cli/#options","title":"Options","text":"<ul> <li><code>-c, --config file</code>: (optional) the config file to customize the list of mirrors to scrape for kernel releases (by default it looks at $HOME/.krawler.yaml).</li> <li><code>-v, --verbosity level</code>: (optional) the verbosity level (debug, info, warn, error, fatal, panic). By (default warning).</li> </ul>"},{"location":"reference/cli/#commands","title":"Commands","text":""},{"location":"reference/cli/#listls","title":"<code>list</code>|<code>ls</code>","text":"<p>List available kernel releases with distributed headers, by Linux distribution. It returns a list of <code>kernelRelease</code> objects. The output format can be specified by flag parameter.</p> <pre><code>krawler [options] list|ls &lt;distribution&gt; [-o &lt;format&gt;] \n</code></pre>"},{"location":"reference/cli/#parameters","title":"Parameters","text":"<p><code>distribution</code>: (required) The Linux distribution for which the release has been pubished. Available distributions:</p> <ul> <li>amazonlinux</li> <li>amazonlinux2</li> <li>amazonlinux2022</li> <li>amazonlinux2023</li> <li>centos</li> <li>debian</li> <li>ubuntu</li> <li>fedora</li> <li>oracle</li> <li>opensuse</li> </ul>"},{"location":"reference/cli/#options_1","title":"Options","text":"<p><code>-o, --output format</code>: (optional) the format of the output of the list of kernel releases (one of text, json or yaml). By default yaml.</p>"},{"location":"reference/cli/#output","title":"Output","text":"<p>The <code>list</code>|<code>ls</code> command prints on standard ouput a is a list of kernel release objects of type <code>KernelRelease</code>.</p> <p>An example of a <code>yaml</code>-formatted result entry:</p> <pre><code>https://github.com/maxgio92/krawler/blob/main/pkg/kernelrelease/kernelrelease.go#L16\nfullversion: 4.18.0\nversion: 4\npatchlevel: 18\nsublevel: 0\nextraversion: \"326\"\nfullextraversion: -326.el8.x86_64\narchitecture: x86_64\npackagename: kernel-devel\npackageurl: https://mirrors.edge.kernel.org/centos/8-stream/BaseOS/x86_64/os/Packages/kernel-devel-4.18.0-326.el8.x86_64.rpm\ncompilerversion: \"80500\"\n</code></pre>"},{"location":"reference/config/","title":"Configuration reference","text":""},{"location":"reference/config/#languages","title":"Languages","text":"<p>Configuration can be expressed in:</p> <ul> <li><code>json</code></li> <li><code>yaml</code></li> </ul>"},{"location":"reference/config/#the-structure","title":"The structure","text":"<pre><code>distros:\n  &lt;Distro name&gt;:\n    versions: [\"\"]\n    archs: [\"\"]\n    mirrors: [{name: \"\", url: \"\"}]\n    repositories: [{name: \"\", uri: \"\"}]\n    vars: []\noutput:\n  verbosity: [0-6]\n</code></pre> <p>All <code>versions</code>, <code>archs</code>, <code>mirrors</code> are optional fields of the distro configuration.</p>"},{"location":"reference/config/#distros","title":"Distros","text":"<p><code>distros</code> is a map of well-known supported distro structures.</p>"},{"location":"reference/config/#supported-distros","title":"Supported distros","text":"<p>As of now, the supported Linux distributions are: - amazonlinux1 - amazonlinux2 - amazonlinux2022 - amazonlinux2023 - centos - debian - ubuntu - fedora - oracle - opensuse - archlinux</p> <p><code>distro</code> structure is a map of <code>versions</code>, <code>archs</code>, <code>mirrors</code>, <code>repositories</code>.</p>"},{"location":"reference/config/#example","title":"Example","text":"<pre><code>distros:\n  centos:\n    versions: []\n    archs: []\n    mirrors: []\n    repositories: []\n    vars: []\n</code></pre>"},{"location":"reference/config/#distroversions","title":"Distro.Versions","text":"<p><code>versions</code> is an array of well-known distribution versions, as named under package repository trees (e.g. 8-stream).</p>"},{"location":"reference/config/#distroarchs","title":"Distro.Archs","text":"<p><code>archs</code> is an array of supported architecture IDs.</p> <p>The name follows the one provided by package repository trees. For example x86_64/amd64, aarch86, ppc64le.</p> <p>If omitted, all supported CPU architectures are selected.</p>"},{"location":"reference/config/#distromirrors","title":"Distro.Mirrors","text":"<p><code>mirrors</code> is an array of <code>mirror</code> structure, which is a map of: - <code>name</code> (optional) - <code>url</code></p> <p><code>name</code> is a string label for the name of the mirror (e.g. Edge). Please note that this is a label, the value does not have side effects in the crawling flow.</p> <p><code>url</code> is the root URL of the mirror (e.g. https://mirrors.kernel.org/centos).</p>"},{"location":"reference/config/#example_1","title":"Example","text":"<pre><code>centos:\n  mirrors:\n  - url: https://mirrors.kernel.org/centos\n</code></pre>"},{"location":"reference/config/#distrorepositories","title":"Distro.Repositories","text":"<p><code>repositories</code> is an array of <code>repository</code> structure, which in turn is a map of: - <code>name</code> (optional) - <code>uri</code></p> <p><code>name</code> is a string label for the name of the repository (e.g. AppStream for Centos). Please note that this is a label, the value does not have side effects in the crawling flow.</p> <p><code>uri</code> is a string that contains the uri path to the repository root folder, starting from the root URL of the mirror. Note that the uri format should start with a \"/\".</p>"},{"location":"reference/config/#example_2","title":"Example","text":"<pre><code>centos:\n  repositories:\n  - name: AppStream\n    uri: /AppStream/x86_64/os/\n</code></pre>"},{"location":"reference/config/#repositories-templating","title":"Repositories Templating","text":"<p><code>uri</code> field supports templates in the Go template format for annotations that refer to elements of the related distro's data structure (e.g. <code>distros.centos</code>). These elements can be both system-declared and user-declared data structures.</p>"},{"location":"reference/config/#supported-data-types","title":"Supported data types","text":"<p>The supported element types are:</p> <ul> <li>array of strings</li> </ul>"},{"location":"reference/config/#system-declared-variables","title":"System declared variables","text":"<ul> <li><code>Distro.Archs</code></li> <li><code>Distro.Versions</code></li> </ul>"},{"location":"reference/config/#distrovars-user-declared-variables","title":"Distro.Vars: User declared variables","text":"<p>You can define your declared variables in <code>Distro.Vars</code> structure, which is expected at <code>distros.&lt;distro&gt;.vars</code> path.</p> <p>Example</p> <p>For example, to configure both old and new Centos repositories, given both the archive and current kernel.org mirrors, you can template the repository URLs like below:</p> <pre><code>distros:\n  centos:\n    archs: [\"aarch64\", \"x86_64\"]\n    mirrors:\n    - name: archive\n      url: https://archive.kernel.org/centos-vault/\n    - name: edge\n    url: https://mirrors.edge.kernel.org/centos/\n    repositories:\n    - name: old\n      uri: \"/{{ .old_repos }}/{{ .archs }}/\"\n    - name: new\n      uri: \"/{{ .new_repos }}/{{ .archs }}/os/\"\n    vars:\n      new_repos: [\"BaseOS\", \"AppStream\"]\n      old_repos: [\"os\", \"updates\"]\n</code></pre> <p>As you can see both system-declared (e.g. <code>archs</code>) and user-declared (e.g. <code>new_repos</code>) data structure can be referenced in the template string.</p>"},{"location":"reference/config/#output","title":"Output","text":"<p><code>output</code> is a map of settings for visual output of the commands: - <code>verbosity</code></p>"},{"location":"reference/config/#verbosity","title":"Verbosity","text":"<p><code>verbosity</code> allows to set the verbosity of the visual output of the commands, through a decimal number from 0 to 6.</p> <p>It can be set either globally (as above), and per <code>distro</code>. For example:</p> <pre><code>distros:\n  ubuntu:\n    mirrors:\n    - url: \"https://mirrors.edge.kernel.org/ubuntu\"\n      name: Edge\n    - url: \"http://security.ubuntu.com/ubuntu\"\n      name: Security\n    output:\n      verbosity: 6\n</code></pre>"}]}